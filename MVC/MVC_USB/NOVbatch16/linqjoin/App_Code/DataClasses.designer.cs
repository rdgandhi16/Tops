#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_28dec")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Inserttbl_state(tbl_state instance);
  partial void Updatetbl_state(tbl_state instance);
  partial void Deletetbl_state(tbl_state instance);
  partial void Inserttbl_city(tbl_city instance);
  partial void Updatetbl_city(tbl_city instance);
  partial void Deletetbl_city(tbl_city instance);
  partial void Inserttbl_linq_join(tbl_linq_join instance);
  partial void Updatetbl_linq_join(tbl_linq_join instance);
  partial void Deletetbl_linq_join(tbl_linq_join instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db_28decConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tbl_state> tbl_states
	{
		get
		{
			return this.GetTable<tbl_state>();
		}
	}
	
	public System.Data.Linq.Table<tbl_city> tbl_cities
	{
		get
		{
			return this.GetTable<tbl_city>();
		}
	}
	
	public System.Data.Linq.Table<tbl_linq_join> tbl_linq_joins
	{
		get
		{
			return this.GetTable<tbl_linq_join>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_state")]
public partial class tbl_state : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _statename;
	
	private EntitySet<tbl_city> _tbl_cities;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstatenameChanging(string value);
    partial void OnstatenameChanged();
    #endregion
	
	public tbl_state()
	{
		this._tbl_cities = new EntitySet<tbl_city>(new Action<tbl_city>(this.attach_tbl_cities), new Action<tbl_city>(this.detach_tbl_cities));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statename", DbType="VarChar(50)")]
	public string statename
	{
		get
		{
			return this._statename;
		}
		set
		{
			if ((this._statename != value))
			{
				this.OnstatenameChanging(value);
				this.SendPropertyChanging();
				this._statename = value;
				this.SendPropertyChanged("statename");
				this.OnstatenameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_city", Storage="_tbl_cities", ThisKey="id", OtherKey="sid")]
	public EntitySet<tbl_city> tbl_cities
	{
		get
		{
			return this._tbl_cities;
		}
		set
		{
			this._tbl_cities.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbl_cities(tbl_city entity)
	{
		this.SendPropertyChanging();
		entity.tbl_state = this;
	}
	
	private void detach_tbl_cities(tbl_city entity)
	{
		this.SendPropertyChanging();
		entity.tbl_state = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_city")]
public partial class tbl_city : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _cid;
	
	private string _cityname;
	
	private System.Nullable<int> _sid;
	
	private EntityRef<tbl_state> _tbl_state;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OncitynameChanging(string value);
    partial void OncitynameChanged();
    partial void OnsidChanging(System.Nullable<int> value);
    partial void OnsidChanged();
    #endregion
	
	public tbl_city()
	{
		this._tbl_state = default(EntityRef<tbl_state>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int cid
	{
		get
		{
			return this._cid;
		}
		set
		{
			if ((this._cid != value))
			{
				this.OncidChanging(value);
				this.SendPropertyChanging();
				this._cid = value;
				this.SendPropertyChanged("cid");
				this.OncidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityname", DbType="VarChar(50)")]
	public string cityname
	{
		get
		{
			return this._cityname;
		}
		set
		{
			if ((this._cityname != value))
			{
				this.OncitynameChanging(value);
				this.SendPropertyChanging();
				this._cityname = value;
				this.SendPropertyChanged("cityname");
				this.OncitynameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Int")]
	public System.Nullable<int> sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				if (this._tbl_state.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnsidChanging(value);
				this.SendPropertyChanging();
				this._sid = value;
				this.SendPropertyChanged("sid");
				this.OnsidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_city", Storage="_tbl_state", ThisKey="sid", OtherKey="id", IsForeignKey=true)]
	public tbl_state tbl_state
	{
		get
		{
			return this._tbl_state.Entity;
		}
		set
		{
			tbl_state previousValue = this._tbl_state.Entity;
			if (((previousValue != value) 
						|| (this._tbl_state.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbl_state.Entity = null;
					previousValue.tbl_cities.Remove(this);
				}
				this._tbl_state.Entity = value;
				if ((value != null))
				{
					value.tbl_cities.Add(this);
					this._sid = value.id;
				}
				else
				{
					this._sid = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbl_state");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_linq_join")]
public partial class tbl_linq_join : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private System.Nullable<int> _stateid;
	
	private string _city;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstateidChanging(System.Nullable<int> value);
    partial void OnstateidChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
	
	public tbl_linq_join()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", DbType="Int")]
	public System.Nullable<int> stateid
	{
		get
		{
			return this._stateid;
		}
		set
		{
			if ((this._stateid != value))
			{
				this.OnstateidChanging(value);
				this.SendPropertyChanging();
				this._stateid = value;
				this.SendPropertyChanged("stateid");
				this.OnstateidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
